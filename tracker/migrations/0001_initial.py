# Generated by Django 4.2.22 on 2025-06-10 06:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LoteDeVinho",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="ID único para este lote de vinho",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nome_lote",
                    models.CharField(
                        max_length=200, verbose_name="Nome do Lote / Vinho"
                    ),
                ),
                (
                    "variedade_uva",
                    models.CharField(max_length=100, verbose_name="Variedade da Uva"),
                ),
                ("data_colheita", models.DateField(verbose_name="Data da Colheita")),
                (
                    "origem_vinhedo",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Origem do Vinhedo",
                    ),
                ),
                (
                    "data_chegada_uvas",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Data de Chegada das Uvas na Vinícola",
                    ),
                ),
                (
                    "detalhes_fermentacao",
                    models.TextField(
                        blank=True, null=True, verbose_name="Detalhes da Fermentação"
                    ),
                ),
                (
                    "tempo_barrica",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tempo em Barrica (Ex: 12 meses)",
                    ),
                ),
                (
                    "tipo_barrica",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tipo de Barrica (Ex: Carvalho Francês, 1º uso)",
                    ),
                ),
                (
                    "processo_envelhecimento",
                    models.TextField(
                        blank=True, null=True, verbose_name="Processo de Envelhecimento"
                    ),
                ),
                (
                    "data_engarrafamento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Engarrafamento"
                    ),
                ),
                (
                    "data_lancamento",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Data de Lançamento / Chegada às Prateleiras",
                    ),
                ),
                (
                    "tipo_rolha",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tipo de Rolha (Ex: Cortiça natural, Sintética)",
                    ),
                ),
                (
                    "ultima_modificacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Modificação"
                    ),
                ),
                (
                    "quantidade_produzida",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Quantidade Produzida (Garrafas)",
                    ),
                ),
                (
                    "notas_degustacao",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas de Degustação"
                    ),
                ),
                (
                    "informacoes_adicionais",
                    models.TextField(
                        blank=True, null=True, verbose_name="Informações Adicionais"
                    ),
                ),
                (
                    "timestamp_criacao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação do Registro"
                    ),
                ),
                (
                    "harmonizacao",
                    models.TextField(
                        blank=True,
                        help_text="Sugestões de harmonização com alimentos.",
                        null=True,
                    ),
                ),
                (
                    "temperatura_servico",
                    models.CharField(
                        blank=True,
                        help_text="Temperatura ideal para servir o vinho.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "link_video_producao",
                    models.URLField(
                        blank=True,
                        help_text="Link para um vídeo sobre a produção (YouTube, Vimeo, etc.).",
                        null=True,
                    ),
                ),
                (
                    "link_rede_social_vinicola",
                    models.URLField(
                        blank=True,
                        help_text="Link para a rede social oficial da vinícola.",
                        null=True,
                    ),
                ),
                (
                    "quantidade_produzida_inicial",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número total de garrafas produzidas neste lote.",
                        verbose_name="Quantidade Produzida Inicial (Garrafas)",
                    ),
                ),
                (
                    "quantidade_em_estoque",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de garrafas atualmente disponíveis.",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantidade Atual em Estoque (Garrafas)",
                    ),
                ),
                (
                    "nivel_alerta_estoque",
                    models.PositiveIntegerField(
                        blank=True,
                        default=10,
                        help_text="Receber alerta quando o estoque atingir esta quantidade.",
                        null=True,
                        verbose_name="Nível de Alerta de Estoque (Garrafas)",
                    ),
                ),
                (
                    "sugestoes_harmonizacao",
                    models.TextField(
                        blank=True,
                        help_text="Descreva pratos ou tipos de alimentos que combinam bem com este vinho.",
                        null=True,
                        verbose_name="Sugestões de Harmonização",
                    ),
                ),
                (
                    "temperatura_servico_recomendada",
                    models.CharField(
                        blank=True,
                        help_text="Ex: 16-18°C",
                        max_length=100,
                        null=True,
                        verbose_name="Temperatura Ideal de Serviço",
                    ),
                ),
                (
                    "dicas_armazenamento",
                    models.TextField(
                        blank=True,
                        help_text="Instruções sobre como armazenar a garrafa para preservar a qualidade do vinho.",
                        null=True,
                        verbose_name="Dicas de Armazenamento",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True,
                        help_text="Link para um vídeo (Ex: YouTube, Vimeo) sobre o vinho, vinícola ou produção. Use o link de 'incorporar' (embed).",
                        null=True,
                        verbose_name="URL do Vídeo",
                    ),
                ),
                (
                    "imagem_vinho",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="vinhos_imagens/",
                        verbose_name="Imagem do Vinho/Rótulo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lote de Vinho",
                "verbose_name_plural": "Lotes de Vinho",
                "ordering": ["-data_colheita", "-timestamp_criacao"],
            },
        ),
        migrations.CreateModel(
            name="ScanEvento",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "timestamp_scan",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data/Hora do Scan"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Endereço IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                (
                    "lote_vinho",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scans",
                        to="tracker.lotedevinho",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento de Scan de QR Code",
                "verbose_name_plural": "Eventos de Scan de QR Code",
                "ordering": ["-timestamp_scan"],
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoCliente",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nome_avaliador",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Seu Nome (Opcional)",
                    ),
                ),
                (
                    "email_avaliador",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Seu Email (Opcional, não será publicado)",
                    ),
                ),
                (
                    "estrelas",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        help_text="Pontuação de 1 a 5 estrelas.",
                    ),
                ),
                (
                    "comentario",
                    models.TextField(
                        blank=True, help_text="Comentário sobre o vinho.", null=True
                    ),
                ),
                ("data_avaliacao", models.DateTimeField(auto_now_add=True)),
                (
                    "lote_vinho",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacoes",
                        to="tracker.lotedevinho",
                    ),
                ),
            ],
            options={
                "ordering": ["-data_avaliacao"],
            },
        ),
    ]
