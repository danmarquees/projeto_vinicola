# Generated by Django 5.1.4 on 2025-06-03 19:57

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0003_rename_lote_vinho_avaliacaocliente_nome_lote'),
    ]

    operations = [
        migrations.AddField(
            model_name='lotedevinho',
            name='nivel_alerta_estoque',
            field=models.PositiveIntegerField(blank=True, default=10, help_text='Receber alerta quando o estoque atingir esta quantidade.', null=True, verbose_name='Nível de Alerta de Estoque (Garrafas)'),
        ),
        migrations.AddField(
            model_name='lotedevinho',
            name='quantidade_em_estoque',
            field=models.PositiveIntegerField(default=0, help_text='Número de garrafas atualmente disponíveis.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantidade Atual em Estoque (Garrafas)'),
        ),
        migrations.AddField(
            model_name='lotedevinho',
            name='quantidade_produzida_inicial',
            field=models.PositiveIntegerField(default=0, help_text='Número total de garrafas produzidas neste lote.', verbose_name='Quantidade Produzida Inicial (Garrafas)'),
        ),
        migrations.AddField(
            model_name='lotedevinho',
            name='tempo_barrica',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Tempo em Barrica (Ex: 12 meses)'),
        ),
        migrations.AddField(
            model_name='lotedevinho',
            name='tipo_barrica',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de Barrica (Ex: Carvalho Francês, 1º uso)'),
        ),
        migrations.AddField(
            model_name='lotedevinho',
            name='tipo_rolha',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de Rolha (Ex: Cortiça natural, Sintética)'),
        ),
        migrations.CreateModel(
            name='ScanEvento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp_scan', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora do Scan')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('lote_vinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='tracker.lotedevinho')),
            ],
            options={
                'verbose_name': 'Evento de Scan de QR Code',
                'verbose_name_plural': 'Eventos de Scan de QR Code',
                'ordering': ['-timestamp_scan'],
            },
        ),
    ]
